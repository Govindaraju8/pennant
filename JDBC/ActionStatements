

import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
		
		Statement s=c.createStatement();
		
		String s1="select * from reshu_emp";
		String s2="insert into reshu_emp(empid,ename,dept_no) values(20,'hell',52)";
		String s3="delete from reshu_emp where ename='hell'";
		
		int r=s.executeUpdate(s3);
		
		System.out.println("no of lines get effected....."+r);
		
		ResultSet rst=s.executeQuery(s1);
		
		while(rst.next()) {
			String empn=rst.getString("ename");
			int eid=rst.getInt("empid");
			int dept=rst.getInt("dept_no");
		
		System.out.println("empno...."+ empn +"   employeee id......"+ eid +"  department number....."+dept);
		}
		s.close();
		c.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}


/**************************************************/
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
		
		Statement s=c.createStatement();
		
		String c1="create table example(std_id int,std_name varchar(10),section int)";
		String c3="insert into example(std_id,std_name,section) values(52,'masti',01)";
		String c2="select * from example";
		
		int r=s.executeUpdate(c3);
		
		System.out.println("no of lines get effected....."+r);
		
		ResultSet rst=s.executeQuery(c2);
		
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		}
		s.close();
		c.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}

/******************************************************************************************/
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
		
		Statement s=c.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		
		//String c1="create table example(std_id int,std_name varchar(10),section int)";
		//String c3="insert into example(std_id,std_name,section) values(52,'masti',01)";
		String c2="select * from example";
		
		//int r=s.executeUpdate(c3);
		
		//System.out.println("no of lines get effected....."+r);
		
		ResultSet rst=s.executeQuery(c2);
		
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		
		
            // Modify the salary of the employee with id=1 (hypothetical change)
            if (stdid == 52) {
                rst.updateInt("section", 2);
                rst.updateRow(); // Commit the update to the database
                System.out.println("Updated id of student");
            }
        }
		rst.beforeFirst();
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		}
		s.close();
		c.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}
/*** prepared Statement using select query*******/
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
		
		//Statement s=c.createStatement();
		
		
		String c2="select * from example where std_id=?";
		PreparedStatement p=c.prepareStatement(c2);
		p.setInt(1, 52);
		
		//int r=s.executeUpdate(c3);
		
		//System.out.println("no of lines get effected....."+r);
		
		ResultSet rst=p.executeQuery();
		
            
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		}
		p.close();
		c.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}

/*************************************************************/
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
		
		//Statement s=c.createStatement();
		
		
		String c2="insert into example(std_name,std_id,section) values(?,?,?)";
		PreparedStatement p=c.prepareStatement(c2);
		p.setString(1,"hari");
		p.setInt(2, 55);
		p.setInt(3, 12);
		
		//int r=s.executeUpdate(c3);
		
		//System.out.println("no of lines get effected....."+r);
		
		ResultSet rst=p.executeQuery();
		
            
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		}
		p.close();
		c.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}

/******************************************************************************************************/

import java.sql.Connection;
import java.sql.CallableStatement;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class ConnectDB {

	public static void main(String[] args) {
		try {
		
		String url="jdbc:postgresql://localhost:5432/postgres";
		String user="postgres";
		String password="#Mastani14";
		
		Class.forName("org.postgresql.Driver");
		
		Connection c=DriverManager.getConnection(url,user,password);
	
		String call= "{call my_procd(?,?,?)}";
		CallableStatement cs=c.prepareCall(call);
	
		
		cs.setInt(1, 12);
		cs.setString(2, "hello");
		cs.setInt(3, 13);
		cs.execute();
		
		// Retrieve and print table values using PreparedStatement
        String sql = "SELECT * FROM example";
        PreparedStatement s = c.prepareStatement(sql);
        ResultSet rst = s.executeQuery();
        
        
        int r = cs.getUpdateCount();
		System.out.println("no of lines get effected....."+r);
            
		
		while(rst.next()) {
			String stdname=rst.getString("std_name");
			int stdid=rst.getInt("std_id");
			int section=rst.getInt("section");
		
		System.out.println("student name...."+ stdname +"   student id......"+ stdid +"  section name....."+section);
		}
		s.close();
		cs.close();
		rst.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
	}

}


CREATE OR REPLACE FUNCTION my_procd(IN param1 INTEGER, IN param2 VARCHAR, IN param3 INTEGER)
RETURNS VOID AS
$$
BEGIN
    insert into example(std_id,std_name,section)values(153,'reshushaik',200);
END;
$$
LANGUAGE PLPGSQL;

/********************************************BATCH EXECUTION STATEMENTS ***********************************/




package jdbc_example1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class batch_executions {

	public static void main(String[] args) {
		try {
			String url = "jdbc:postgresql://192.168.110.48:5432/plf_training";
			String username = "plf_training_admin";
			String password = "pff123";

			Class.forName("org.postgresql.Driver");
			Connection connection = DriverManager.getConnection(url, username, password);

			String insertSql = "INSERT INTO example123(std_id, std_name, std_dept) VALUES (?, ?, ?)";
			PreparedStatement preparedStatement = connection.prepareStatement(insertSql);

			// Add multiple rows to the batch
			for (int i = 1; i <= 10; i++) {
				preparedStatement.setInt(1, i);
				preparedStatement.setString(2, "Employee " + i);
				preparedStatement.setDouble(3, 50000 + i * 1000);
				preparedStatement.addBatch();
			}

			// Execute the batch
			int[] batchResult = preparedStatement.executeBatch();
			for (int i = 0; i < batchResult.length; i++) {
				System.out.println(batchResult[i]);
			}

			// Print the number of rows affected by each statement
			for (int result : batchResult) {
				System.out.println("Rows affected: " + result);
			}

			// Retrieve and print the inserted data
			String selectSql = "SELECT * FROM example123";
			ResultSet resultSet = connection.createStatement().executeQuery(selectSql);

			System.out.println("Inserted data:");
			while (resultSet.next()) {
				int id = resultSet.getInt("std_id");
				String name = resultSet.getString("std_name");
				double salary = resultSet.getDouble("std_dept");

				System.out.println("ID: " + id + ", Name: " + name + ", Salary: " + salary);
			}

			preparedStatement.close();
			connection.close();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}
	}
}

